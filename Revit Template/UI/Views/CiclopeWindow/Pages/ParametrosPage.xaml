<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="av"
    x:Class="RevitTemplate.UI.Views.Pages.ParametrosPage"
    Title="Parâmetros">    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
            <!-- Converter para transformar booleanos em valores de visibilidade -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </Page.Resources>
    
    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Padronização dos botões de ação -->
        <Grid Grid.Row="0" Margin="0,0,0,16" HorizontalAlignment="Left" VerticalAlignment="Top"
              DataContext="{Binding ViewModel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
           
                <!-- Botão 1: Adicionar Parâmetros -->
            <ui:Button Grid.Column="0"
                       Height="64"
                       MinWidth="280"
                       Margin="12,0,12,0"
                       Padding="16,12"
                       HorizontalContentAlignment="Left"
                       VerticalContentAlignment="Center"
                       Icon="{ui:SymbolIcon Symbol=Add32}"
                       Command="{Binding AdicionarParametrosCommand}"
                       Visibility="{Binding BotaoAdicionarParametrosVisivel, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel>
                    <TextBlock Text="Adicionar Parâmetros aos elementos selecionados" FontWeight="SemiBold"/>
                    <TextBlock Text="Adiciona os parâmetros CICLOPE apenas aos elementos mostrados na tabela." FontSize="11" Foreground="Gray"/>
                </StackPanel>
            </ui:Button>

            <!-- Botão 2: Atualizar tabela -->
            <ui:Button Grid.Column="1"
                       Height="64"
                       MinWidth="280"
                       Margin="12,0,12,0"
                       Padding="16,12"
                       HorizontalContentAlignment="Left"
                       VerticalContentAlignment="Center"
                       Icon="{ui:SymbolIcon Symbol=ArrowCounterclockwise32}"
                       Command="{Binding AtualizarTabelaCommand}">
                <StackPanel>
                    <TextBlock Text="Atualizar tabela das famílias" FontWeight="SemiBold"/>
                    <TextBlock Text="Busca por novas familias no projeto e atualiza a tabela" FontSize="11" Foreground="Gray"/>
                </StackPanel>
            </ui:Button>

            <!-- Botão 3: Enviar para o CICLOPE -->
            <ui:Button Grid.Column="2"
                       Height="64"
                       MinWidth="280"
                       Margin="12,0,12,0"
                       Padding="16,12"
                       HorizontalContentAlignment="Left"
                       VerticalContentAlignment="Center"
                       Icon="{ui:SymbolIcon Symbol=Send24}"
                       Command="{Binding EnviarParaCiclopeCommand}">
                <StackPanel>
                    <TextBlock Text="Enviar para o CICLOPE" FontWeight="SemiBold" VerticalAlignment="Center"/>
                    <TextBlock Text="Envia as famílias do projeto para o Ciclope" FontSize="11" Foreground="Gray"/>
                </StackPanel>
            </ui:Button>
        </Grid>        <ContentPresenter Grid.Row="2" x:Name="RootContentDialog"/>
        
        <!-- DataGrid -->        <DataGrid Grid.Row="3"
                  Margin="0,12,0,0"
                  Padding="5"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserReorderColumns="True"
                  HeadersVisibility="Column"
                  GridLinesVisibility="All"
                  IsReadOnly="False"
                  x:Name="ElementosDataGrid"
                  CellEditEnding="ElementosDataGrid_CellEditEnding"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto"
                  ScrollViewer.CanContentScroll="True"
                  ItemsSource="{Binding ViewModel.Elementos}"
                  >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Categoria" Binding="{Binding Category}" Width="120" IsReadOnly="True" />
                <DataGridTextColumn Header="Nome" Binding="{Binding Name}" Width="*" IsReadOnly="True" />
                <DataGridTextColumn Header="Tipo" Binding="{Binding Type}" Width="*" IsReadOnly="True" />
                <DataGridTextColumn Header="Quantidade" Binding="{Binding Quantity}" Width="90" IsReadOnly="True" />
                <DataGridTextColumn Header="Área" Binding="{Binding AreaFormatted}" Width="100" IsReadOnly="True" />
                <DataGridTextColumn Header="Volume" Binding="{Binding VolumeFormatted}" Width="100" IsReadOnly="True" />
                <DataGridTextColumn Header="Perímetro" Binding="{Binding PerimeterFormatted}" Width="100" IsReadOnly="True" />
                <DataGridTextColumn Header="Base" Binding="{Binding ValorBase, UpdateSourceTrigger=PropertyChanged}" Width="100" />
                <DataGridTextColumn Header="Estado" Binding="{Binding ValorEstado, UpdateSourceTrigger=PropertyChanged}" Width="100" />
                <DataGridTextColumn Header="Código" Binding="{Binding ValorCodigo, UpdateSourceTrigger=PropertyChanged}" Width="100" />
                <DataGridTemplateColumn Header="Ações" Width="120" MinWidth="100" MaxWidth="140">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0" >
                                <!-- Botão de ver no modelo 3D -->
                                <ui:Button 
                                    ToolTip="Ver no Modelo 3D" 
                                    Icon="{ui:SymbolIcon Symbol=Open16}" 
                                    Margin="2,0"
                                    Command="{Binding DataContext.ViewModel.SelecionarElementosCommand, 
                                              RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    CommandParameter="{Binding}"/>
                                
                                <!-- Botão de preencher parâmetros -->
                                <ui:Button 
                                    ToolTip="Buscar serviço/Insumo" 
                                    Icon="{ui:SymbolIcon Symbol=Edit16}" 
                                    Margin="2,0"
                                />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <ui:SnackbarPresenter 
            x:Name="Snackbar"
        />

    </Grid>
</Page>
